<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.mapper.UserPoMapper" >
  <resultMap id="BaseResultMap" type="cn.pojo.UserPo" >
    <id column="userId" property="userid" jdbcType="INTEGER" />
    <result column="loginId" property="loginid" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="userSex" property="usersex" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="userType" property="usertype" jdbcType="INTEGER" />
    <result column="sign" property="sign" jdbcType="VARCHAR" />
    <result column="headSculptureUrl" property="headsculptureurl" jdbcType="VARCHAR" />
    <result column="registationDate" property="registationdate" jdbcType="TIMESTAMP" />
    <result column="userStateId" property="userstateid" jdbcType="INTEGER" />
  </resultMap>
 
  
  <sql id="Base_Column_List" >
    userId, loginId, password, userName, userSex, email, phone, userType, sign, headSculptureUrl, 
    registationDate, userStateId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.pojo.UserPo" >
    insert into user (userId, loginId, password, 
      userName, userSex, email, 
      phone, userType, sign, 
      headSculptureUrl, registationDate, userStateId
      )
    values (#{userid,jdbcType=INTEGER}, #{loginid,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{usersex,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{usertype,jdbcType=INTEGER}, #{sign,jdbcType=VARCHAR}, 
      #{headsculptureurl,jdbcType=VARCHAR}, #{registationdate,jdbcType=TIMESTAMP}, #{userstateid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.pojo.UserPo" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="loginid != null" >
        loginId,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="usersex != null" >
        userSex,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="usertype != null" >
        userType,
      </if>
      <if test="sign != null" >
        sign,
      </if>
      <if test="headsculptureurl != null" >
        headSculptureUrl,
      </if>
      <if test="registationdate != null" >
        registationDate,
      </if>
      <if test="userstateid != null" >
        userStateId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="loginid != null" >
        #{loginid,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="usersex != null" >
        #{usersex,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=INTEGER},
      </if>
      <if test="sign != null" >
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="headsculptureurl != null" >
        #{headsculptureurl,jdbcType=VARCHAR},
      </if>
      <if test="registationdate != null" >
        #{registationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="userstateid != null" >
        #{userstateid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.pojo.UserPo" >
    update user
    <set >
      <if test="loginid != null" >
        loginId = #{loginid,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="usersex != null" >
        userSex = #{usersex,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        userType = #{usertype,jdbcType=INTEGER},
      </if>
      <if test="sign != null" >
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="headsculptureurl != null" >
        headSculptureUrl = #{headsculptureurl,jdbcType=VARCHAR},
      </if>
      <if test="registationdate != null" >
        registationDate = #{registationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="userstateid != null" >
        userStateId = #{userstateid,jdbcType=INTEGER},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.pojo.UserPo" >
    update user
    set loginId = #{loginid,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      userName = #{username,jdbcType=VARCHAR},
      userSex = #{usersex,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      userType = #{usertype,jdbcType=INTEGER},
      sign = #{sign,jdbcType=VARCHAR},
      headSculptureUrl = #{headsculptureurl,jdbcType=VARCHAR},
      registationDate = #{registationdate,jdbcType=TIMESTAMP},
      userStateId = #{userstateid,jdbcType=INTEGER}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  
  <select id="selectUsers" resultMap="BaseResultMap">
  		select * from user
  </select>
  
  <select id="selectByUserName" parameterType="String" resultMap="BaseResultMap">
  
  		select * from user where userName=#{userName}
  </select>
  <update id="updateOldPassWord" parameterType="Map" >
    update user
    set password = #{password}
    where loginId = #{loginId}
  </update>
  
   <select id="selectByLoginId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where loginId = #{loginid,jdbcType=VARCHAR}
  </select>
    <select id="selectUserPoByUserNameForPagination" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from user
    <where>
			<if test="username!=null and username!=''">
				userName like #{username}
			</if>
			<if test="loginid!=null and loginid!=''">
				or loginid like #{loginid}
			</if>
			<if test="usersex!=null and usersex!=''">
				or usersex like #{usersex}
			</if>
			<if test="phone!=null and phone!=''">
				or phone like #{phone}
			</if>
		</where>
    limit #{pageIndex},#{pageSize}
  </select>
  <select id="selectCountUserPoByUserNameForPagination" resultType="java.lang.Integer" parameterType="java.util.Map" >
    select  count(*) 	
    from user
    <where>
			<if test="username!=null and username!=''">
				userName like #{username}
			</if>
			<if test="loginid!=null and loginid!=''">
				or loginid like #{loginid}
			</if>
			<if test="usersex!=null and usersex!=''">
				or usersex like #{usersex}
			</if>
			<if test="phone!=null and phone!=''">
				or phone like #{phone}
			</if>
		</where>
  </select>
  <select id="selectUserCount" resultType="int">
     select count(*) from user
  </select>
  <select id="selectUserPoByUserNameForPaginationFreeze" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from user
    <where>
			<if test="username!=null and username!=''">
				userName like #{username}
			</if>
			<if test="loginid!=null and loginid!=''">
				or loginid like #{loginid}
			</if>
			<if test="usersex!=null and usersex!=''">
				or usersex like #{usersex}
			</if>
			<if test="phone!=null and phone!=''">
				or phone like #{phone}
			</if>
			and userstateid =2
		</where>
    limit #{pageIndex},#{pageSize}
  </select>
  <select id="selectCountUserPoByUserNameForPaginationFreeze" resultType="java.lang.Integer" parameterType="java.util.Map" >
    select  count(*) 	
    from user
    <where>
			<if test="username!=null and username!=''">
				userName like #{username}
			</if>
			<if test="loginid!=null and loginid!=''">
				or loginid like #{loginid}
			</if>
			<if test="usersex!=null and usersex!=''">
				or usersex like #{usersex}
			</if>
			<if test="phone!=null and phone!=''">
				or phone like #{phone}
			</if>
			and userstateid =2
		</where>
  </select>
  <select id="selectUserPoByUserNameForPaginationEmail" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from user
    <where>
			<if test="username!=null and username!=''">
				userName like #{username}
			</if>
			<if test="loginid!=null and loginid!=''">
				or loginid like #{loginid}
			</if>
			<if test="usersex!=null and usersex!=''">
				or usersex like #{usersex}
			</if>
			<if test="phone!=null and phone!=''">
				or phone like #{phone}
			</if>
			and userstateid =1
		</where>
    limit #{pageIndex},#{pageSize}
  </select>
  <select id="selectCountUserPoByUserNameForPaginationEmail" resultType="java.lang.Integer" parameterType="java.util.Map" >
    select  count(*) 	
    from user
    <where>
			<if test="username!=null and username!=''">
				userName like #{username}
			</if>
			<if test="loginid!=null and loginid!=''">
				or loginid like #{loginid}
			</if>
			<if test="usersex!=null and usersex!=''">
				or usersex like #{usersex}
			</if>
			<if test="phone!=null and phone!=''">
				or phone like #{phone}
			</if>
			and userstateid =1
		</where>
  </select>
</mapper>