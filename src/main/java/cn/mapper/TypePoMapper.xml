<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.mapper.TypePoMapper">
	<resultMap id="BaseResultMap" type="cn.pojo.TypePo">
		<id column="typeId" property="typeid" jdbcType="INTEGER" />
		<result column="typeName" property="typename" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		typeId, typeName
	</sql>
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from type
		where typeId = #{typeid,jdbcType=INTEGER}
	</select>
	<select id="selectAllType" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />

		from type
	</select>
	<select id="selectByName" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from type
		where typeName = #{typename,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from type
		where typeId = #{typeid,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="cn.pojo.TypePo">
		insert into type (typeId, typeName)
		values (#{typeid,jdbcType=INTEGER}, #{typename,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="cn.pojo.TypePo">
		insert into type
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="typeid != null">
				typeId,
			</if>
			<if test="typename != null">
				typeName,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="typeid != null">
				#{typeid,jdbcType=INTEGER},
			</if>
			<if test="typename != null">
				#{typename,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="cn.pojo.TypePo">
		update type
		<set>
			<if test="typename != null">
				typeName = #{typename,jdbcType=VARCHAR},
			</if>
		</set>
		where typeId = #{typeid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.pojo.TypePo">
		update type
		set typeName = #{typename,jdbcType=VARCHAR}
		where typeId = #{typeid,jdbcType=INTEGER}
	</update>
	<!-- TypeVo集合 -->
	<resultMap id="ResultTypeVoMap" type="cn.pojo.vo.TypeVo">
	
		<association property="typePo" javaType="cn.pojo.TypePo" column="typeId" select="cn.mapper.TypePoMapper.selectByPrimaryKey">
			<id column="typeId" property="typeid"  jdbcType="INTEGER" />
			<result column="typeName" property="typename"  jdbcType="VARCHAR"/>
		</association>
		
		<collection property="list" ofType="cn.pojo.SongPo" column="typeId" select="cn.mapper.SongPoMapper.selectByTypeId">
			<id column="songId" property="songid" jdbcType="INTEGER" />
			<result column="songName" property="songname" jdbcType="VARCHAR" />
			<result column="singerId" property="singerid" jdbcType="INTEGER" />
			<result column="CDId" property="cdid" jdbcType="INTEGER" />
			<result column="language" property="language" jdbcType="VARCHAR" />
			<result column="playCount" property="playcount" jdbcType="INTEGER" />
			<result column="downloadCount" property="downloadcount"
				jdbcType="INTEGER" />
			<result column="collectionCount" property="collectioncount"
				jdbcType="INTEGER" />
			<result column="publishDate" property="publishdate" jdbcType="TIMESTAMP" />
			<result column="songUrl" property="songurl" jdbcType="VARCHAR" />
			<result column="cyricUrl" property="cyricurl" jdbcType="VARCHAR" />
			<result column="songTime" property="songtime" jdbcType="DOUBLE" />
			<result column="typeId" property="typeid" jdbcType="INTEGER" />
			<result column="songStateId" property="songstateid" jdbcType="INTEGER" />
		</collection>	
		
		<collection  property="songListList" ofType="cn.pojo.SongListPo" column="typeId" select="cn.mapper.SongListPoMapper.selectByTypeId">
				<id column="songListId" property="songlistid" />
				<result column="userId" property="userid" />
				<result column="songListName" property="songlistname" />
				<result column="type_Id" property="typeid" />
				<result column="accessCount" property="accesscount" />
				<result column="introduce" property="introduce" />
				<result column="collectionCount" property="collectioncount" />
				<result column="tags" property="tags" />
				<result column="songListStateid" property="songliststateid" />
		</collection>
	</resultMap> 
	<!-- 查询所有的typeVo -->
	<select id="selectAllTypeVo" resultMap="ResultTypeVoMap">
	 select * from type
	</select>
	 
	 <!-- TypeVo集合 -->
	 <resultMap id="ResultTypeVoMap1" type="cn.pojo.vo.TypeVo">
		<association property="typePo" javaType="cn.pojo.TypePo">
			<id column="typeId" property="typeid"  jdbcType="INTEGER" />
			<result column="typeName" property="typename"  jdbcType="VARCHAR"/>
		</association>
		<collection  property="songListList" ofType="cn.pojo.SongListPo" column="typeId" select="cn.mapper.SongListPoMapper.selectByTypeId">
				<id column="songListId" property="songlistid" />
				<result column="userId" property="userid" />
				<result column="songListName" property="songlistname" />
				<result column="type_Id" property="typeid" />
				<result column="accessCount" property="accesscount" />
				<result column="introduce" property="introduce" />
				<result column="collectionCount" property="collectioncount" />
				<result column="tags" property="tags" />
				<result column="songListStateid" property="songliststateid" />
		</collection>
	</resultMap>
	 <!-- 通过typeId查询typeVo对象 -->
	<select id="selectTypeVoByTypeId" resultMap="ResultTypeVoMap1" parameterType="java.lang.Integer">
		select * from type
		where typeId=#{typeId}
		      
	</select>
	
	<select id="selectSomeType"  parameterType="java.util.Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />

		from type limit #{pageIndex},#{pageSize}
	</select>
		
</mapper>